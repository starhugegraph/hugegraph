# bind url
restserver.url=http://127.0.0.1:8080
# gremlin server url, need to be consistent with host and port in gremlin-server.yaml
#gremlinserver.url=http://127.0.0.1:8182

# The time in seconds within which a request must complete, -1 means no timeout
#restserver.request_timeout=30

# graphs directory
graphs=./conf/graphs
graph.load_from_local_config=true

# meta server info
cluster=hg
meta.endpoints=[http://127.0.0.1:2379]

# Auth server: auth_server is true; Hugegraph server: auth_server is false
auth_server=false
server.start_ignore_single_graph_error=true

# The maximum thread ratio for batch writing, only take effect if the batch.max_write_threads is 0
batch.max_write_ratio=80
batch.max_write_threads=0

# The maximum number of vertices & edges submitted per batch
batch.max_vertices_per_batch=2000
batch.max_edges_per_batch=2000

# authentication configs
# choose 'com.baidu.hugegraph.auth.StandardAuthenticator' or 'com.baidu.hugegraph.auth.ConfigAuthenticator'
#auth.authenticator=

# for StandardAuthenticator mode
auth.graph_store=system
# auth client config
#auth.remote_url=127.0.0.1:8899,127.0.0.1:8898,127.0.0.1:8897

# for ConfigAuthenticator mode
#auth.admin_token=
#auth.user_tokens=[]

# rpc group configs of multi graph servers
# rpc server configs
rpc.server_host=127.0.0.1
rpc.server_port=8090
#rpc.server_timeout=30

# rpc client configs (like enable to keep cache consistency)
rpc.remote_url=127.0.0.1:8090
#rpc.client_connect_timeout=20
#rpc.client_reconnect_period=10
#rpc.client_read_timeout=40
#rpc.client_retries=3
#rpc.client_load_balancer=consistentHash

# k8s api, default not support
k8s.api=false
k8s.namespace=hugegraph-computer-system
k8s.kubeconfig=conf/kube.kubeconfig
k8s.hugegraph_url=http://127.0.0.1:8080
k8s.enable_internal_algorithm=true
k8s.internal_algorithm_image_url=hugegraph/hugegraph-computer-based-algorithm:beta1
k8s.internal_algorithm=[page-rank, degree-centrality, wcc, triangle-count, rings, rings-with-filter, betweenness-centrality, closeness-centrality, lpa, links, kcore, louvain, clustering-coefficient]
k8s.algorithms=[ \
    page-rank:com.baidu.hugegraph.computer.algorithm.centrality.pagerank.PageRankParams, \
    degree-centrality:com.baidu.hugegraph.computer.algorithm.centrality.degree.DegreeCentralityParams, \
    wcc:com.baidu.hugegraph.computer.algorithm.community.wcc.WccParams, \
    triangle-count:com.baidu.hugegraph.computer.algorithm.community.trianglecount.TriangleCountParams, \
    rings:com.baidu.hugegraph.computer.algorithm.path.rings.RingsDetectionParams, \
    rings-with-filter:com.baidu.hugegraph.computer.algorithm.path.rings.filter.RingsDetectionWithFilterParams, \
    betweenness-centrality:com.baidu.hugegraph.computer.algorithm.centrality.betweenness.BetweennessCentralityParams, \
    closeness-centrality:com.baidu.hugegraph.computer.algorithm.centrality.closeness.ClosenessCentralityParams, \
    lpa:com.baidu.hugegraph.computer.algorithm.community.lpa.LpaParams, \
    links:com.baidu.hugegraph.computer.algorithm.path.links.LinksParams, \
    kcore:com.baidu.hugegraph.computer.algorithm.community.kcore.KCoreParams, \
    louvain:com.baidu.hugegraph.computer.algorithm.community.louvain.LouvainParams, \
    clustering-coefficient:com.baidu.hugegraph.computer.algorithm.community.cc.ClusteringCoefficientParams \
]

# lightweight load balancing (beta)
server.id=server-1
server.role=master

# The event hub threads of server, range [1, 2 * CPUS]
#server.event_hub_threads=1

# The maximum worker threads of rest server. default: 2 * CPUS
#restserver.max_worker_threads=32

# The minimum free memory(MB) of rest server, requests will be rejected
# when the available memory of system is lower than this value.
#restserver.min_free_memory=64

# The time in seconds to keep an inactive connection alive, -1 means no timeout
#restserver.connection_idle_timeout=30

# The max number of HTTP requests allowed to be processed on one keep-alive connection, -1 means unlimited.
#restserver.connection_max_requests=256

# The timeout in seconds of waiting for gremlin server
#gremlinserver.timeout=30

# The max route number for gremlin server, default: 2 * CPUS
#gremlinserver.max_route=32

# Whether to allow exception trace stack
#exception.allow_trace=false

# The path of server keystore file used when https protocol is enabled
#ssl.keystore_file=conf/hugegraph-server.keystore

# The password of the server keystore file when the https protocol is enabled
#ssl.keystore_password=hugegraph
